package main

import (
	"context"
	"encoding/hex"
	"fmt"
	"geth/contract/aggregation_router"
	"geth/contract/dai"
	"geth/contract/paraswap"
	paraswaptransfer "geth/contract/paraswap_transfer_proxy"
	paraswaputil "geth/contract/paraswap_util"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/crypto"
	"github.com/ethereum/go-ethereum/ethclient"
	"github.com/ethereum/go-ethereum/rpc"
	solsha3 "github.com/miguelmota/go-solidity-sha3"
	"math/big"
	"strconv"
	"strings"
	"time"
)

type TransactionArgs struct {
	From     string `json:"from"`
	To       string `json:"to"`
	Gas      string `json:"gas"`
	GasPrice string `json:"gasPrice"`
	Input    string `json:"input"`
	Value    string `json:"value"`
}

type OverrideAccount struct {
	Nonce     string            `json:"nonce,omitempty"`
	Balance   string            `json:"balance,omitempty"`
	Code      string            `json:"code,omitempty"`
	State     map[string]string `json:"state,omitempty"`
	StateDiff map[string]string `json:"stateDiff,omitempty"`
}

type StateOverride map[string]OverrideAccount

type TraceConfig struct {
	DisableStorage   bool `json:"disableStorage"`
	DisableStack     bool `json:"disableStack"`
	EnableMemory     bool `json:"enableMemory"`
	EnableReturnData bool `json:"enableReturnData"`
	//Tracer           string        `json:"tracer"`
	Timeout        string        `json:"timeout"`
	StateOverrides StateOverride `json:"stateOverrides"`
}

type StructLog struct {
	Pc            uint64                      `json:"pc"`
	Op            string                      `json:"op"`
	Gas           uint64                      `json:"gas"`
	GasCost       uint64                      `json:"gasCost"`
	Memory        []string                    `json:"memory,omitempty"`
	MemorySize    int                         `json:"memSize"`
	Stack         []string                    `json:"stack"`
	ReturnData    []byte                      `json:"returnData,omitempty"`
	Storage       map[common.Hash]common.Hash `json:"-"`
	Depth         int                         `json:"depth"`
	RefundCounter uint64                      `json:"refund"`
	Err           error                       `json:"-"`
}

type DebugTraceCallResponse struct {
	Failed      bool        `json:"failed"`
	Gas         uint64      `json:"gas"`
	ReturnValue string      `json:"returnValue"`
	StructLogs  []StructLog `json:"structLogs"`
}

type RpcClient struct {
	Client    *rpc.Client
	EthClient *ethclient.Client
}

var (
	daiContract      = "0x6b175474e89094c44da98b954eedeac495271d0f"
	daiBalanceOfSlot = "2"
	daiAllowanceSlot = "3"

	kncContract = "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202"
	//kncContract      = "0xdd974D5C2e2928deA5F71b9825b8b646686BD200"
	kncBalanceSlot   = "101"
	kncAllowanceSlot = "102"

	wallet = "0x1111111111111111111111111111111111111100"
	router = "0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57"
	//router        = "0x1111111254fb6c44bac0bed2854e76f90643097d"
	multiPath     = "0xb41Ec6e014e2AD12Ae8514216EAb2592b74F19e7"
	transferProxy = "0x216B4B4Ba9F3e719726886d34a177484278Bfcae"

	encodedSwapData = "0xa94e78ef00000000000000000000000000000000000000000000000000000000000000200000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000056bc75e2d63100000000000000000000000000000000000000000000000000002d6f6d8b0bc9b999500000000000000000000000000000000000000000000000327bcf0c45fc95550000000000000000000000000111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000007a000000000000000000000000000000000000000000000000000000000631917456809c14d6a3e4ef287c2e2dec835262b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000300000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000bdd13a9dd364e5557e0710fc1d2ac145b5e8f3be000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000004000000000000000000000000f9234cb08edb93c0d4a4d4c70cc3ffd070e78e07000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000004de4a478c2975ab1ea89e8196811f51a7b7ade33eb11000000000000000000000000defa4e8a7bcba345f687a2f1456f5edd9ce972020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000e609aeab29245b235f63ddc23a34ed911524818a0000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000060000000000000000000000001c87257f5e8609940bc751a07bb085bb7f8cdbe6000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000000000000061639d6ec06c13a96b5eb9560b359d7c648c77590000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000defa4e8a7bcba345f687a2f1456f5edd9ce972020000000000000000000000000000000000000000000000000000000000000000"
)

func main() {
	// Create an IPC based RPC connection to a remote node
	// NOTE update the path to the ipc file!

	startTime := time.Now()
	client := NewRPCClient("/Users/nguyenducminh/ethdata/geth.ipc")
	//client := NewRPCClient("/Users/nguyenducminh/Library/Ethereum/goerli/geth.ipc")
	//client.GetTokenBalanceOf()
	structLogs := client.GetStructLogs()
	client.GetEtherParaswapLosgs(structLogs)
	//client.GetGoerliLogs(structLogs)
	fmt.Println("Execution time: ", time.Now().Sub(startTime))
}

func NewRPCClient(address string) *RpcClient {
	var err error
	rpcClient := &RpcClient{}
	rpcClient.Client, err = rpc.Dial(address)
	if err != nil {
		panic(err)
	}
	rpcClient.EthClient = ethclient.NewClient(rpcClient.Client)
	if err != nil {
		panic(err)
	}
	return rpcClient
}

func (rc *RpcClient) GetTokenBalanceOf() {
	indexDaiBalanceOf := rc.GetIndexBalanceOf(wallet, daiBalanceOfSlot)
	fmt.Println("indexDaiBalanceOf", indexDaiBalanceOf)
	rc.GetBalanceOf(daiContract, indexDaiBalanceOf)

	indexDaiAllowance := rc.GetIndexAllowance(wallet, router, daiAllowanceSlot)
	fmt.Println("indexDaiAllowance", indexDaiAllowance)

	fakeBalance := "0x" + toHashString("0x130EE8E7179044400000")
	fmt.Println("fakeBalance", fakeBalance)

	fakeAllowance := "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
	fmt.Println("fakeAllowance", fakeAllowance)
	//{"params":[{"from":"0x0000000000000000000000000000000000000000",
	//	"data":"0x70a08231000000000000000000000000ef09879057a9ad798438f3ba561bcdd293d72fc7",
	//	"to":"0x6b175474e89094c44da98b954eedeac495271d0f"}]}
	objectEthCall := TransactionArgs{
		From:     "0x0000000000000000000000000000000000000000",
		To:       daiContract,
		GasPrice: "0x9502F9000",
		Gas:      "0x7A1200",
		//Value: "0x8AC7230489E80000",
		Input: "0x70a08231000000000000000000000000ef09879057a9ad798438f3ba561bcdd293d72fc7",
	}

	configEthCall := StateOverride{
		wallet: OverrideAccount{
			Balance: "0x56BC75E2D63100000",
		},
		daiContract: OverrideAccount{
			StateDiff: map[string]string{
				indexDaiBalanceOf.String(): fakeBalance,
				indexDaiAllowance.String(): fakeAllowance,
			},
		},
	}

	var responseEthCall *string

	if err := rc.Client.Call(
		responseEthCall,
		"eth_call",
		objectEthCall,
		"latest", configEthCall); err != nil {
		panic(err)
	}

	fmt.Println(responseEthCall)
}

func (rc *RpcClient) GetStructLogs() []StructLog {
	object := TransactionArgs{
		From: wallet,
		To:   router,
		//GasPrice: "0x9502F9000",
		GasPrice: "0x174876E800",
		//Gas:      "0x7A1200",
		Gas: "0x7A1200",
		//Value:    "0x8AC7230489E80000",
		Input: encodedSwapData,
	}

	indexDaiBalanceOf := rc.GetIndexBalanceOf(wallet, daiBalanceOfSlot)
	fmt.Println("indexDaiBalanceOf", indexDaiBalanceOf)
	//rc.GetBalanceOf(daiContract, indexDaiBalanceOf)

	indexDaiAllowance := rc.GetIndexAllowance(wallet, router, daiAllowanceSlot)
	fmt.Println("indexDaiAllowance", indexDaiAllowance)

	indexDaiTransferProxyAllowance := rc.GetIndexAllowance(wallet, transferProxy, daiAllowanceSlot)
	fmt.Println("indexDaiTransferProxyAllowance", indexDaiTransferProxyAllowance)

	indexKNCBalanceOf := rc.GetIndexBalanceOf(wallet, kncBalanceSlot)
	fmt.Println("indexKNCBalanceOf", indexKNCBalanceOf)
	//rc.GetBalanceOf(daiContract, indexKNCBalanceOf)

	indexKNCAllowance := rc.GetIndexAllowance(wallet, router, kncAllowanceSlot)
	fmt.Println("indexKNCAllowance", indexKNCAllowance)

	fakeBalance := "0x" + toHashString("0xD3C21BCECCEDA1000000")
	fmt.Println("fakeBalance", fakeBalance)

	fakeAllowance := "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
	fmt.Println("fakeAllowance", fakeAllowance)

	config := TraceConfig{
		DisableStorage:   false,
		DisableStack:     false,
		EnableMemory:     true,
		EnableReturnData: true,
		//Tracer:           "loggetter",
		Timeout: "20s",
		StateOverrides: StateOverride{
			wallet: OverrideAccount{
				Balance: "0x56BC75E2D63100000",
			},
			//multiPath: {
			//	Nonce: "0x12",
			//	Code:  "0x6080604052600436106100915760003560e01c80637a3226ec116100595780637a3226ec1461017557806381cbd3ea146101a057806382678dd6146101cb578063a94e78ef146101f6578063d830a05b1461022657610091565b806312070a411461009657806330d643b5146100c157806335326910146100ec578063439fab911461011c57806346c67b6d14610145575b600080fd5b3480156100a257600080fd5b506100ab610251565b6040516100b89190613ea6565b60405180910390f35b3480156100cd57600080fd5b506100d6610275565b6040516100e39190613b9c565b60405180910390f35b61010660048036038101906101019190612f8e565b610299565b6040516101139190613ea6565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190612f49565b61057b565b005b61015f600480360381019061015a9190612fcf565b6105b6565b60405161016c9190613ea6565b60405180910390f35b34801561018157600080fd5b5061018a610999565b6040516101979190613b9c565b60405180910390f35b3480156101ac57600080fd5b506101b56109bd565b6040516101c29190613c09565b60405180910390f35b3480156101d757600080fd5b506101e06109e1565b6040516101ed9190613b9c565b60405180910390f35b610210600480360381019061020b9190613010565b610a0d565b60405161021d9190613ea6565b60405180910390f35b34801561023257600080fd5b5061023b610e10565b6040516102489190613ea6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f7a05a596cb0ce7fdea8a1e1ec73be300bdb35097c944ce1897202f7a13122eb281565b60004282610160015110156102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da90613e46565b60405180910390fd5b6000826020015190506000836060015190506102fd610e34565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610336576000610338565b805b3414610379576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037090613dc6565b60405180910390fd5b60008460800151905060008073ffffffffffffffffffffffffffffffffffffffff168660c0015173ffffffffffffffffffffffffffffffffffffffff16146103c5578560c001516103c7565b335b905060008660400151905060008760a0015190506000841161041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590613e86565b60405180910390fd5b61042e86868a6101400151610e50565b60006104468960000151888589898e60e00151610f66565b905060006104588a61012001516112ce565b61048f576104738483878d61010001518e61012001516112f0565b61047d883061133c565b905061048a883383611437565b6104bf565b61049a848684611437565b6104a4883061133c565b90506104be888885848e61010001518f61012001516115ac565b5b6104d2818861166390919063ffffffff16565b96508373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f4cc7e95e48af62690313a0733e93308ac9a73326bc3c29f1788b1191c376d5b68d61018001518e61010001518f6101200151338e8a8c6040516105639796959493929190613b2d565b60405180910390a48198505050505050505050919050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90613d66565b60405180910390fd5b6000428261012001511015610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f790613e46565b60405180910390fd5b60008260000151905060008360200151905061061a610e34565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610653576000610655565b805b3414610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068d90613dc6565b60405180910390fd5b60008460400151905060008560600151905060008073ffffffffffffffffffffffffffffffffffffffff16876080015173ffffffffffffffffffffffffffffffffffffffff16146106eb5786608001516106ed565b335b905060608760a00151905060008160008151811061070757fe5b60200260200101516020015160018360008151811061072257fe5b60200260200101516020015151038151811061073a57fe5b60200260200101516000015190506000851161078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290613e86565b60405180910390fd5b61079b87878b6101000151610e50565b6107a88960e001516112ce565b156107c4576107c187878b60c001518c60e001516116b3565b95505b60005b825160ff168160ff16101561086a57600061081961271061080b868560ff16815181106107f057fe5b6020026020010151600001518b61170090919063ffffffff16565b61177090919063ffffffff16565b905060018451038260ff16141561083757610834893061133c565b90505b61085c8982868560ff168151811061084b57fe5b6020026020010151602001516117c6565b5080806001019150506107c7565b506000610877823061133c565b9050858110156108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390613e06565b60405180910390fd5b6108c98a60e001516112ce565b6108e8576108e3828683878e60c001518f60e00151611b95565b6108f4565b6108f3828583611437565b5b8173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fe00361d207b252a464323eb23d45d42583e391f2031acdd2e9fa36efddd43cb08d61014001518e60c001518f60e00151338e898e6040516109819796959493929190613b2d565b60405180910390a48098505050505050505050919050565b7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006040516020016109f290613970565b60405160208183030381529060405280519060200120905090565b6000428261012001511015610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e90613e46565b60405180910390fd5b600082600001519050600083602001519050610a71610e34565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610aaa576000610aac565b805b3414610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490613dc6565b60405180910390fd5b60008460400151905060008560600151905060008073ffffffffffffffffffffffffffffffffffffffff16876080015173ffffffffffffffffffffffffffffffffffffffff1614610b42578660800151610b44565b335b905060608760a001519050600081600183510381518110610b6157fe5b602002602001015160000151905060008511610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990613e86565b60405180910390fd5b7f312723079d4bc09a73253d15f0e7c8ee28a716a42bc96e13886815962cf93b41333088604051610be5939291906139c0565b60405180910390a1610bfd87878b6101000151610e50565b610c0a8960e001516112ce565b15610c2657610c2387878b60c001518c60e001516116b3565b95505b610c318787846117c6565b7f312723079d4bc09a73253d15f0e7c8ee28a716a42bc96e13886815962cf93b41333088604051610c64939291906139c0565b60405180910390a16000610c78823061133c565b905085811015610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490613e06565b60405180910390fd5b7f312723079d4bc09a73253d15f0e7c8ee28a716a42bc96e13886815962cf93b41333083604051610cf0939291906139c0565b60405180910390a1610d058a60e001516112ce565b610d2457610d1f828683878e60c001518f60e00151611b95565b610d6b565b7f312723079d4bc09a73253d15f0e7c8ee28a716a42bc96e13886815962cf93b41828583604051610d5793929190613a73565b60405180910390a1610d6a828583611437565b5b8173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fe00361d207b252a464323eb23d45d42583e391f2031acdd2e9fa36efddd43cb08d61014001518e60c001518f60e00151338e898e604051610df89796959493929190613b2d565b60405180910390a48098505050505050505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b7f312723079d4bc09a73253d15f0e7c8ee28a716a42bc96e13886815962cf93b41333084604051610e83939291906139c0565b60405180910390a1610e93610e34565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f6157610ecf8382611c4a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315dacbea843330866040518563ffffffff1660e01b8152600401610f2e9493929190613a2e565b600060405180830381600087803b158015610f4857600080fd5b505af1158015610f5c573d6000803e3d6000fd5b505050505b505050565b60003073ffffffffffffffffffffffffffffffffffffffff166391d148547f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49896040518363ffffffff1660e01b8152600401610fc3929190613bb7565b60206040518083038186803b158015610fdb57600080fd5b505afa158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190612f20565b611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990613d46565b60405180910390fd5b60005b825181101561126e576110666125d5565b83828151811061107257fe5b602002602001015190506000806110946001875161166390919063ffffffff16565b8414156110ca576110b76110a88a3061133c565b8861166390919063ffffffff16565b90506110c38a3061133c565b9150611125565b6110f56127106110e785604001518b61170090919063ffffffff16565b61177090919063ffffffff16565b915061112261271061111485604001518a61170090919063ffffffff16565b61177090919063ffffffff16565b90505b60008b73ffffffffffffffffffffffffffffffffffffffff166325deee1e60e01b85600001518d8d87878a602001518b6060015160405160240161116f9796959493929190613ec1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516111d99190613959565b600060405180830381855af49150503d8060008114611214576040519150601f19603f3d011682016040523d82523d6000602084013e611219565b606091505b505090508061125d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125490613da6565b60405180910390fd5b505050508080600101915050611055565b50600061127b863061133c565b9050838110156112c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b790613c86565b60405180910390fd5b809150509695505050505050565b60008060f883901c141580156112e957506000618000831614155b9050919050565b60006112fc8383611e11565b905060008114611329576000806113138784611ee2565b915091506113248789878585611f76565b965050505b611334868587611437565b505050505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113a5578173ffffffffffffffffffffffffffffffffffffffff16319050611431565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016113de91906139a5565b60206040518083038186803b1580156113f657600080fd5b505afa15801561140a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142e9190613051565b90505b92915050565b60008111156115a75773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561153f5760008273ffffffffffffffffffffffffffffffffffffffff1682612710906040516114b290613990565b600060405180830381858888f193505050503d80600081146114f0576040519150601f19603f3d011682016040523d82523d6000602084013e6114f5565b606091505b5050905080611539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153090613c46565b60405180910390fd5b506115a6565b7f6ae69222768d00c831213d6afd4cec422b4d4f89949133c7c4e26ba5e02a5fa283838360405161157293929190613a73565b60405180910390a16115a582828573ffffffffffffffffffffffffffffffffffffffff166121809092919063ffffffff16565b5b5b505050565b60006115b88383611e11565b905060006115d982876115d4888b61166390919063ffffffff16565b612206565b9050600080600084146115f9576115f08885611ee2565b80925081935050505b600083146116405760008061160f858989612240565b91509150611626828561231290919063ffffffff16565b935061163b818461231290919063ffffffff16565b925050505b6116578a336116528a8e8b8888611f76565b611437565b50505050505050505050565b6000828211156116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169f90613ca6565b60405180910390fd5b818303905092915050565b6000806116c08484611e11565b905060008114156116d457849150506116f8565b6000806116e18784611ee2565b915091506116f28789888585611f76565b93505050505b949350505050565b600080831415611713576000905061176a565b600082840290508284828161172457fe5b0414611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175c90613d86565b60405180910390fd5b809150505b92915050565b60008082116117b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ab90613ce6565b60405180910390fd5b8183816117bd57fe5b04905092915050565b600081511161180a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180190613d26565b60405180910390fd5b60005b8151811015611b8f5760008082116118255784611841565b82600183038151811061183457fe5b6020026020010151600001515b9050600083838151811061185157fe5b6020026020010151600001519050600080841161186e5785611879565b611878833061133c565b5b905060005b85858151811061188a57fe5b60200260200101516040015151811015611b7e576118a661261a565b8686815181106118b257fe5b60200260200101516040015182815181106118c957fe5b602002602001015190503073ffffffffffffffffffffffffffffffffffffffff166391d148547f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4983600001516040518363ffffffff1660e01b8152600401611932929190613be0565b60206040518083038186803b15801561194a57600080fd5b505afa15801561195e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119829190612f20565b6119c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b890613d46565b60405180910390fd5b600080871180156119fc57506119f960018989815181106119de57fe5b6020026020010151604001515161166390919063ffffffff16565b83145b611a3057611a2b612710611a1d84602001518761170090919063ffffffff16565b61177090919063ffffffff16565b611a3b565b611a3a863061133c565b5b90506000826000015173ffffffffffffffffffffffffffffffffffffffff1663e76b146c60e01b88888560008860600151604051602401611a80959493929190613aaa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611aea9190613959565b600060405180830381855af49150503d8060008114611b25576040519150601f19603f3d011682016040523d82523d6000602084013e611b2a565b606091505b5050905080611b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6590613da6565b60405180910390fd5b505050808060010191505061187e565b50505050808060010191505061180d565b50505050565b6000611ba18383611e11565b90506000611bb0828789612206565b905060008060008414611be057611bd76000841415611bcf5788611bd1565b895b85611ee2565b80925081935050505b60008314611c2757600080611bf6858989612240565b91509150611c0d828561231290919063ffffffff16565b9350611c22818461231290919063ffffffff16565b925050505b611c3e8a88611c398b8e8b8888611f76565b611437565b50505050505050505050565b60e081511415611d2b5760008273ffffffffffffffffffffffffffffffffffffffff1663d505accf60e01b83604051602001611c87929190613931565b604051602081830303815290604052604051611ca39190613959565b6000604051808303816000865af19150503d8060008114611ce0576040519150601f19603f3d011682016040523d82523d6000602084013e611ce5565b606091505b5050905080611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2090613d06565b60405180910390fd5b505b61010081511415611e0d5760008273ffffffffffffffffffffffffffffffffffffffff16638fcbaf0c60e01b83604051602001611d69929190613931565b604051602081830303815290604052604051611d859190613959565b6000604051808303816000865af19150503d8060008114611dc2576040519150601f19603f3d011682016040523d82523d6000602084013e611dc7565b606091505b5050905080611e0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0290613d06565b60405180910390fd5b505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e505760009050611edc565b600060f883901c90506000811415611e6a57829150611e89565b600062010000841614611e81576000915050611edc565b613fff831691505b7f00000000000000000000000000000000000000000000000000000000000000008211611eb65781611ed8565b7f00000000000000000000000000000000000000000000000000000000000000005b9150505b92915050565b6000806000611f0e612710611f00868861170090919063ffffffff16565b61177090919063ffffffff16565b9050611f57612710611f497f00000000000000000000000000000000000000000000000000000000000000008461170090919063ffffffff16565b61177090919063ffffffff16565b9250611f6c838261166390919063ffffffff16565b9150509250929050565b600080611f8c838561231290919063ffffffff16565b90506000811415611fa05786915050612177565b86811115611fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fda90613de6565b60405180910390fd5b61200e867f000000000000000000000000000000000000000000000000000000000000000083611437565b600084146120a6577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d1f4354b8688876040518463ffffffff1660e01b8152600401612073939291906139f7565b600060405180830381600087803b15801561208d57600080fd5b505af11580156120a1573d6000803e3d6000fd5b505050505b60008314612160577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d1f4354b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688866040518463ffffffff1660e01b815260040161212d939291906139f7565b600060405180830381600087803b15801561214757600080fd5b505af115801561215b573d6000803e3d6000fd5b505050505b612173818861166390919063ffffffff16565b9150505b95945050505050565b6122018363a9059cbb60e01b848460405160240161219f929190613b04565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612367565b505050565b60006032841115801561221857508183115b612223576000612237565b612236828461166390919063ffffffff16565b5b90509392505050565b60008061225760028661177090919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461230a57600060f884901c905060008114612308576000620100008516146122f5576000613fff851690506122ed6127106122df61271084116122cc57836122d0565b6127105b8661170090919063ffffffff16565b61177090919063ffffffff16565b935050612307565b600061400085161415612306578192505b5b5b505b935093915050565b60008082840190508381101561235d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235490613c66565b60405180910390fd5b8091505092915050565b60606123c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661242e9092919063ffffffff16565b905060008151111561242957808060200190518101906123e99190612f20565b612428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241f90613e66565b60405180910390fd5b5b505050565b606061243d8484600085612446565b90509392505050565b60608247101561248b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161248290613cc6565b60405180910390fd5b6124948561255b565b6124d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ca90613e26565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516124fd9190613959565b60006040518083038185875af1925050503d806000811461253a576040519150601f19603f3d011682016040523d82523d6000602084013e61253f565b606091505b509150915061254f82828661256e565b92505050949350505050565b600080823b905060008111915050919050565b6060831561257e578290506125ce565b6000835111156125915782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125c59190613c24565b60405180910390fd5b9392505050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001606081525090565b60008135905061266781614279565b92915050565b60008135905061267c81614290565b92915050565b600082601f83011261269357600080fd5b81356126a66126a182613f68565b613f37565b9150818183526020840193506020810190508360005b838110156126ec57813586016126d2888261291a565b8452602084019350602083019250506001810190506126bc565b5050505092915050565b600082601f83011261270757600080fd5b813561271a61271582613f94565b613f37565b9150818183526020840193506020810190508360005b8381101561276057813586016127468882612b0a565b845260208401935060208301925050600181019050612730565b5050505092915050565b600082601f83011261277b57600080fd5b813561278e61278982613fc0565b613f37565b9150818183526020840193506020810190508360005b838110156127d457813586016127ba8882612ca6565b8452602084019350602083019250506001810190506127a4565b5050505092915050565b600082601f8301126127ef57600080fd5b81356128026127fd82613fec565b613f37565b9150818183526020840193506020810190508360005b83811015612848578135860161282e8882612d1e565b845260208401935060208301925050600181019050612818565b5050505092915050565b600081519050612861816142a7565b92915050565b600081359050612876816142be565b92915050565b60008083601f84011261288e57600080fd5b8235905067ffffffffffffffff8111156128a757600080fd5b6020830191508360018202830111156128bf57600080fd5b9250929050565b600082601f8301126128d757600080fd5b81356128ea6128e582614018565b613f37565b9150808252602083016020830185838301111561290657600080fd5b61291183828461421a565b50505092915050565b60006080828403121561292c57600080fd5b6129366080613f37565b905060006129468482850161266d565b600083015250602061295a84828501612ef6565b602083015250604061296e84828501612ef6565b604083015250606082013567ffffffffffffffff81111561298e57600080fd5b61299a848285016127de565b60608301525092915050565b60006101a082840312156129b957600080fd5b6129c46101a0613f37565b905060006129d484828501612658565b60008301525060206129e884828501612658565b60208301525060406129fc84828501612658565b6040830152506060612a1084828501612ef6565b6060830152506080612a2484828501612ef6565b60808301525060a0612a3884828501612ef6565b60a08301525060c0612a4c8482850161266d565b60c08301525060e082013567ffffffffffffffff811115612a6c57600080fd5b612a78848285016127de565b60e083015250610100612a8d8482850161266d565b61010083015250610120612aa384828501612ef6565b6101208301525061014082013567ffffffffffffffff811115612ac557600080fd5b612ad1848285016128c6565b61014083015250610160612ae784828501612ef6565b61016083015250610180612afd84828501612867565b6101808301525092915050565b600060408284031215612b1c57600080fd5b612b266040613f37565b90506000612b3684828501612ef6565b600083015250602082013567ffffffffffffffff811115612b5657600080fd5b612b628482850161276a565b60208301525092915050565b60006101608284031215612b8157600080fd5b612b8c610160613f37565b90506000612b9c84828501612658565b6000830152506020612bb084828501612ef6565b6020830152506040612bc484828501612ef6565b6040830152506060612bd884828501612ef6565b6060830152506080612bec8482850161266d565b60808301525060a082013567ffffffffffffffff811115612c0c57600080fd5b612c18848285016126f6565b60a08301525060c0612c2c8482850161266d565b60c08301525060e0612c4084828501612ef6565b60e08301525061010082013567ffffffffffffffff811115612c6157600080fd5b612c6d848285016128c6565b61010083015250610120612c8384828501612ef6565b61012083015250610140612c9984828501612867565b6101408301525092915050565b600060608284031215612cb857600080fd5b612cc26060613f37565b90506000612cd284828501612658565b6000830152506020612ce684828501612ef6565b602083015250604082013567ffffffffffffffff811115612d0657600080fd5b612d1284828501612682565b60408301525092915050565b600060a08284031215612d3057600080fd5b612d3a60a0613f37565b90506000612d4a84828501612ef6565b6000830152506020612d5e84828501612658565b6020830152506040612d7284828501612ef6565b604083015250606082013567ffffffffffffffff811115612d9257600080fd5b612d9e848285016128c6565b6060830152506080612db284828501612ef6565b60808301525092915050565b60006101608284031215612dd157600080fd5b612ddc610160613f37565b90506000612dec84828501612658565b6000830152506020612e0084828501612ef6565b6020830152506040612e1484828501612ef6565b6040830152506060612e2884828501612ef6565b6060830152506080612e3c8482850161266d565b60808301525060a082013567ffffffffffffffff811115612e5c57600080fd5b612e688482850161276a565b60a08301525060c0612e7c8482850161266d565b60c08301525060e0612e9084828501612ef6565b60e08301525061010082013567ffffffffffffffff811115612eb157600080fd5b612ebd848285016128c6565b61010083015250610120612ed384828501612ef6565b61012083015250610140612ee984828501612867565b6101408301525092915050565b600081359050612f05816142d5565b92915050565b600081519050612f1a816142d5565b92915050565b600060208284031215612f3257600080fd5b6000612f4084828501612852565b91505092915050565b60008060208385031215612f5c57600080fd5b600083013567ffffffffffffffff811115612f7657600080fd5b612f828582860161287c565b92509250509250929050565b600060208284031215612fa057600080fd5b600082013567ffffffffffffffff811115612fba57600080fd5b612fc6848285016129a6565b91505092915050565b600060208284031215612fe157600080fd5b600082013567ffffffffffffffff811115612ffb57600080fd5b61300784828501612b6e565b91505092915050565b60006020828403121561302257600080fd5b600082013567ffffffffffffffff81111561303c57600080fd5b61304884828501612dbe565b91505092915050565b60006020828403121561306357600080fd5b600061307184828501612f0b565b91505092915050565b6000613086838361389d565b905092915050565b6130978161419c565b82525050565b6130a6816140e0565b82525050565b6130b5816140e0565b82525050565b60006130c682614058565b6130d08185614086565b9350836020820285016130e285614048565b8060005b8581101561311e57848403895281516130ff858261307a565b945061310a83614079565b925060208a019950506001810190506130e6565b50829750879550505050505092915050565b61313981614110565b82525050565b6131488161413c565b82525050565b61315f61315a82614146565b61425c565b82525050565b600061317082614063565b61317a8185614097565b935061318a818560208601614229565b61319381614268565b840191505092915050565b60006131a982614063565b6131b381856140a8565b93506131c3818560208601614229565b6131cc81614268565b840191505092915050565b60006131e282614063565b6131ec81856140b9565b93506131fc818560208601614229565b80840191505092915050565b613211816141ae565b82525050565b613220816141d2565b82525050565b60006132318261406e565b61323b81856140c4565b935061324b818560208601614229565b61325481614268565b840191505092915050565b600061326c6018836140c4565b91507f4661696c656420746f207472616e7366657220457468657200000000000000006000830152602082019050919050565b60006132ac6005836140d5565b91507f312e302e300000000000000000000000000000000000000000000000000000006000830152600582019050919050565b60006132ec601b836140c4565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600061332c6037836140c4565b91507f526563656976656420616d6f756e74206f6620746f6b656e7320617265206c6560008301527f7373207468656e20657870656374656420746f6b656e730000000000000000006020830152604082019050919050565b6000613392601e836140c4565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b60006133d26026836140c4565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613438601a836140c4565b91507f536166654d6174683a206469766973696f6e206279207a65726f0000000000006000830152602082019050919050565b6000613478600d836140c4565b91507f5065726d6974206661696c6564000000000000000000000000000000000000006000830152602082019050919050565b60006134b8601a836140c4565b91507f50617468206e6f742070726f766964656420666f7220737761700000000000006000830152602082019050919050565b60006134f86018836140c4565b91507f45786368616e6765206e6f742077686974656c697374656400000000000000006000830152602082019050919050565b60006135386016836140c4565b91507f4d4554484f44204e4f5420494d504c454d454e544544000000000000000000006000830152602082019050919050565b60006135786021836140c4565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006135de6016836140c4565b91507f43616c6c20746f2061646170746572206661696c6564000000000000000000006000830152602082019050919050565b600061361e6013836140c4565b91507f496e636f7272656374206d73672e76616c7565000000000000000000000000006000830152602082019050919050565b600061365e6024836140c4565b91507f496e73756666696369656e742062616c616e636520746f2070617920666f722060008301527f66656573000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006136c46010836140d5565b91507f4d554c5449504154485f524f55544552000000000000000000000000000000006000830152601082019050919050565b60006137046030836140c4565b91507f526563656976656420616d6f756e74206f6620746f6b656e7320617265206c6560008301527f7373207468656e206578706563746564000000000000000000000000000000006020830152604082019050919050565b600061376a6000836140b9565b9150600082019050919050565b6000613784601d836140c4565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60006137c46011836140c4565b91507f446561646c696e652062726561636865640000000000000000000000000000006000830152602082019050919050565b6000613804602a836140c4565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b600061386a6016836140c4565b91507f546f20616d6f756e742063616e206e6f742062652030000000000000000000006000830152602082019050919050565b600060a0830160008301516138b56000860182613913565b5060208301516138c8602086018261309d565b5060408301516138db6040860182613913565b50606083015184820360608601526138f38282613165565b91505060808301516139086080860182613913565b508091505092915050565b61391c81614192565b82525050565b61392b81614192565b82525050565b600061393d828561314e565b60048201915061394d82846131d7565b91508190509392505050565b600061396582846131d7565b915081905092915050565b600061397b826136b7565b91506139868261329f565b9150819050919050565b600061399b8261375d565b9150819050919050565b60006020820190506139ba60008301846130ac565b92915050565b60006060820190506139d5600083018661308e565b6139e260208301856130ac565b6139ef6040830184613922565b949350505050565b6000606082019050613a0c600083018661308e565b613a196020830185613208565b613a266040830184613922565b949350505050565b6000608082019050613a4360008301876130ac565b613a50602083018661308e565b613a5d60408301856130ac565b613a6a6060830184613922565b95945050505050565b6000606082019050613a8860008301866130ac565b613a95602083018561308e565b613aa26040830184613922565b949350505050565b600060a082019050613abf60008301886130ac565b613acc60208301876130ac565b613ad96040830186613922565b613ae66060830185613922565b8181036080830152613af881846130bb565b90509695505050505050565b6000604082019050613b1960008301856130ac565b613b266020830184613922565b9392505050565b600060e082019050613b42600083018a613130565b613b4f602083018961308e565b613b5c6040830188613922565b613b69606083018761308e565b613b766080830186613922565b613b8360a0830185613922565b613b9060c0830184613922565b98975050505050505050565b6000602082019050613bb1600083018461313f565b92915050565b6000604082019050613bcc600083018561313f565b613bd960208301846130ac565b9392505050565b6000604082019050613bf5600083018561313f565b613c02602083018461308e565b9392505050565b6000602082019050613c1e6000830184613217565b92915050565b60006020820190508181036000830152613c3e8184613226565b905092915050565b60006020820190508181036000830152613c5f8161325f565b9050919050565b60006020820190508181036000830152613c7f816132df565b9050919050565b60006020820190508181036000830152613c9f8161331f565b9050919050565b60006020820190508181036000830152613cbf81613385565b9050919050565b60006020820190508181036000830152613cdf816133c5565b9050919050565b60006020820190508181036000830152613cff8161342b565b9050919050565b60006020820190508181036000830152613d1f8161346b565b9050919050565b60006020820190508181036000830152613d3f816134ab565b9050919050565b60006020820190508181036000830152613d5f816134eb565b9050919050565b60006020820190508181036000830152613d7f8161352b565b9050919050565b60006020820190508181036000830152613d9f8161356b565b9050919050565b60006020820190508181036000830152613dbf816135d1565b9050919050565b60006020820190508181036000830152613ddf81613611565b9050919050565b60006020820190508181036000830152613dff81613651565b9050919050565b60006020820190508181036000830152613e1f816136f7565b9050919050565b60006020820190508181036000830152613e3f81613777565b9050919050565b60006020820190508181036000830152613e5f816137b7565b9050919050565b60006020820190508181036000830152613e7f816137f7565b9050919050565b60006020820190508181036000830152613e9f8161385d565b9050919050565b6000602082019050613ebb6000830184613922565b92915050565b600060e082019050613ed6600083018a613922565b613ee360208301896130ac565b613ef060408301886130ac565b613efd6060830187613922565b613f0a6080830186613922565b613f1760a08301856130ac565b81810360c0830152613f29818461319e565b905098975050505050505050565b6000604051905081810181811067ffffffffffffffff82111715613f5e57613f5d614266565b5b8060405250919050565b600067ffffffffffffffff821115613f8357613f82614266565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613faf57613fae614266565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613fdb57613fda614266565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561400757614006614266565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561403357614032614266565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006140eb82614172565b9050919050565b60006140fd82614172565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006141a7826141f6565b9050919050565b60006141b9826141c0565b9050919050565b60006141cb82614172565b9050919050565b60006141dd826141e4565b9050919050565b60006141ef82614172565b9050919050565b600061420182614208565b9050919050565b600061421382614172565b9050919050565b82818337600083830152505050565b60005b8381101561424757808201518184015260208101905061422c565b83811115614256576000848401525b50505050565b6000819050919050565bfe5b6000601f19601f8301169050919050565b614282816140e0565b811461428d57600080fd5b50565b614299816140f2565b81146142a457600080fd5b50565b6142b081614104565b81146142bb57600080fd5b50565b6142c781614110565b81146142d257600080fd5b50565b6142de81614192565b81146142e957600080fd5b5056fea26469706673582212200c45830cfc14819a6483a6045e64c83a903e45bea959746a5fc995251435df5164736f6c63430007050033",
			//},
			//router: {
			//	Nonce: "0x10",
			//	Code:  "0x60806040526004361061016a5760003560e01c80639010d07c116100d1578063a64b6e5f1161008a578063ca15c87311610064578063ca15c87314610709578063d2c4b59814610746578063d547741f14610771578063dc9cc6451461079a57610171565b8063a64b6e5f1461067a578063aa5b2458146106a3578063aa97ef02146106cc57610171565b80639010d07c1461053257806390d49b9d1461056f57806391d14854146105985780639812f33b146105d55780639a5a98d314610612578063a217fddf1461064f57610171565b806336568abe1161012357806336568abe146104105780633a9243d7146104395780635459060d1461047657806360e35507146104a15780636df77496146104ca5780637a3226ec1461050757610171565b80630815f6fd146103025780630d8e6e2c1461032b5780631880021914610356578063248a9ca31461037f5780632f2ff15d146103bc57806330d643b5146103e557610171565b3661017157005b600080357fffffffff0000000000000000000000000000000000000000000000000000000016905060006101a4826107d7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610273576102727f734e6e1c6ec3f883cac8d13d3e7390b280f5e94424662aa29e27394ed56586c9836040516024016102109190612ecd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610852565b5b600060608273ffffffffffffffffffffffffffffffffffffffff1660003660405161029f929190612e0e565b600060405180830381855af49150503d80600081146102da576040519150601f19603f3d011682016040523d82523d6000602084013e6102df565b606091505b5091509150816102f3576102f281610852565b5b6102fc8161085a565b50505050005b34801561030e57600080fd5b50610329600480360381019061032491906125e5565b610862565b005b34801561033757600080fd5b506103406109ab565b60405161034d9190612f2e565b60405180910390f35b34801561036257600080fd5b5061037d600480360381019061037891906123c4565b6109e8565b005b34801561038b57600080fd5b506103a660048036038101906103a1919061251b565b610c08565b6040516103b39190612eb2565b60405180910390f35b3480156103c857600080fd5b506103e360048036038101906103de9190612544565b610c28565b005b3480156103f157600080fd5b506103fa610c9c565b6040516104079190612eb2565b60405180910390f35b34801561041c57600080fd5b5061043760048036038101906104329190612544565b610cc0565b005b34801561044557600080fd5b50610460600480360381019061045b919061251b565b610d43565b60405161046d9190612e97565b60405180910390f35b34801561048257600080fd5b5061048b610d6d565b6040516104989190612e53565b60405180910390f35b3480156104ad57600080fd5b506104c860048036038101906104c391906123c4565b610d97565b005b3480156104d657600080fd5b506104f160048036038101906104ec9190612323565b610fb7565b6040516104fe9190613190565b60405180910390f35b34801561051357600080fd5b5061051c6111b4565b6040516105299190612eb2565b60405180910390f35b34801561053e57600080fd5b5061055960048036038101906105549190612580565b6111d8565b6040516105669190612e53565b60405180910390f35b34801561057b57600080fd5b506105966004803603810190610591919061234c565b61120a565b005b3480156105a457600080fd5b506105bf60048036038101906105ba9190612544565b61130a565b6040516105cc9190612e97565b60405180910390f35b3480156105e157600080fd5b506105fc60048036038101906105f7919061251b565b61133c565b6040516106099190612e97565b60405180910390f35b34801561061e57600080fd5b506106396004803603810190610634919061251b565b611366565b6040516106469190612f0c565b60405180910390f35b34801561065b57600080fd5b5061066461141b565b6040516106719190612eb2565b60405180910390f35b34801561068657600080fd5b506106a1600480360381019061069c9190612375565b611422565b005b3480156106af57600080fd5b506106ca60048036038101906106c5919061241c565b6115a8565b005b3480156106d857600080fd5b506106f360048036038101906106ee919061251b565b61181b565b6040516107009190612f0c565b60405180910390f35b34801561071557600080fd5b50610730600480360381019061072b919061251b565b6118d0565b60405161073d91906131b2565b60405180910390f35b34801561075257600080fd5b5061075b6118f7565b6040516107689190612e53565b60405180910390f35b34801561077d57600080fd5b5061079860048036038101906107939190612544565b611920565b005b3480156107a657600080fd5b506107c160048036038101906107bc91906125bc565b6107d7565b6040516107ce9190612e53565b60405180910390f35b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b805160208201fd5b805160208201f35b61086f6000801b3361130a565b6108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590613150565b60405180910390fd5b6108d87f7a05a596cb0ce7fdea8a1e1ec73be300bdb35097c944ce1897202f7a13122eb28261130a565b610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90613090565b60405180910390fd5b8060036000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60606040518060400160405280600581526020017f352e302e30000000000000000000000000000000000000000000000000000000815250905090565b6109f56000801b3361130a565b610a34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2b90613150565b60405180910390fd5b610a5e7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b498461130a565b610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a94906130f0565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663439fab9160e01b8484604051602401610ad1929190612ee8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b3b9190612e27565b600060405180830381855af49150503d8060008114610b76576040519150601f19603f3d011682016040523d82523d6000602084013e610b7b565b606091505b5050905080610bbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb690613030565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff167f4aa65286df310c4e8390d962c75f50380b8260d96ea27cf14847cd683e22d9db60405160405180910390a250505050565b600060086000838152602001908152602001600020600201549050919050565b610c4f6008600084815260200190815260200160002060020154610c4a6119c4565b61130a565b610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8590612f90565b60405180910390fd5b610c9882826119cc565b5050565b7f7a05a596cb0ce7fdea8a1e1ec73be300bdb35097c944ce1897202f7a13122eb281565b610cc86119c4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c90613170565b60405180910390fd5b610d3f8282611a60565b5050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610da46000801b3361130a565b610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda90613150565b60405180910390fd5b610e0d7f7a05a596cb0ce7fdea8a1e1ec73be300bdb35097c944ce1897202f7a13122eb28461130a565b610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390613050565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663439fab9160e01b8484604051602401610e80929190612ee8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610eea9190612e27565b600060405180830381855af49150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b5050905080610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6590612ff0565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff167f2622745e83f97f2d871ef785497c1eeba6f9bb94c7dd486cf28228e814d929e460405160405180910390a250505050565b610fbf612070565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900461ffff1661ffff1661ffff168152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111025780601f106110d757610100808354040283529160200191611102565b820191906000526020600020905b8154815290600101906020018083116110e557829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a45780601f10611179576101008083540402835291602001916111a4565b820191906000526020600020905b81548152906001019060200180831161118757829003601f168201915b5050505050815250509050919050565b7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4981565b60006112028260086000868152602001908152602001600020600001611af490919063ffffffff16565b905092915050565b6112176000801b3361130a565b611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124d90613150565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bd90612fb0565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006113348260086000868152602001908152602001600020600001611b0e90919063ffffffff16565b905092915050565b60006007600083815260200190815260200160002060009054906101000a900460ff169050919050565b6060600560008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561140f5780601f106113e45761010080835404028352916020019161140f565b820191906000526020600020905b8154815290600101906020018083116113f257829003601f168201915b50505050509050919050565b6000801b81565b61142f6000801b3361130a565b61146e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146590613150565b60405180910390fd5b60008111156115a35773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115765760008273ffffffffffffffffffffffffffffffffffffffff1682612710906040516114e990612e3e565b600060405180830381858888f193505050503d8060008114611527576040519150601f19603f3d011682016040523d82523d6000602084013e61152c565b606091505b5050905080611570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156790612f50565b60405180910390fd5b506115a2565b6115a182828573ffffffffffffffffffffffffffffffffffffffff16611b3e9092919063ffffffff16565b5b5b505050565b6115b56000801b3361130a565b6115f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115eb90613150565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415611664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165b906130d0565b60405180910390fd5b6000600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154146116ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e590613010565b60405180910390fd5b6000891180156116ff575061271089105b61173e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173590612fd0565b60405180910390fd5b6127108661ffff161115611787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177e90612fd0565b60405180910390fd5b888160000181905550878160010160006101000a81548160ff021916908315150217905550868160010160016101000a81548160ff02191690831515021790555084848260020191906117db9291906120ae565b50858160010160026101000a81548161ffff021916908361ffff160217905550828282600301919061180e92919061213c565b5050505050505050505050565b6060600660008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118c45780601f10611899576101008083540402835291602001916118c4565b820191906000526020600020905b8154815290600101906020018083116118a757829003601f168201915b50505050509050919050565b60006118f060086000848152602001908152602001600020600001611bc4565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61194760086000848152602001908152602001600020600201546119426119c4565b61130a565b611986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197d906130b0565b60405180910390fd5b6119908282611a60565b5050565b60006119bc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611bd9565b905092915050565b600033905090565b6119f4816008600085815260200190815260200160002060000161199490919063ffffffff16565b15611a5c57611a016119c4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b611a888160086000858152602001908152602001600020600001611c4990919063ffffffff16565b15611af057611a956119c4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000611b038360000183611c79565b60001c905092915050565b6000611b36836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ce6565b905092915050565b611bbf8363a9059cbb60e01b8484604051602401611b5d929190612e6e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d09565b505050565b6000611bd282600001611dd0565b9050919050565b6000611be58383611ce6565b611c3e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611c43565b600090505b92915050565b6000611c71836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611de1565b905092915050565b600081836000018054905011611cc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbb90612f70565b60405180910390fd5b826000018281548110611cd357fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6060611d6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ec99092919063ffffffff16565b9050600081511115611dcb5780806020019051810190611d8b91906124f2565b611dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc190613130565b60405180910390fd5b5b505050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114611ebd5760006001820390506000600186600001805490500390506000866000018281548110611e2c57fe5b9060005260206000200154905080876000018481548110611e4957fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611e8157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611ec3565b60009150505b92915050565b6060611ed88484600085611ee1565b90509392505050565b606082471015611f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1d90613070565b60405180910390fd5b611f2f85611ff6565b611f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6590613110565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff168587604051611f989190612e27565b60006040518083038185875af1925050503d8060008114611fd5576040519150601f19603f3d011682016040523d82523d6000602084013e611fda565b606091505b5091509150611fea828286612009565b92505050949350505050565b600080823b905060008111915050919050565b6060831561201957829050612069565b60008351111561202c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120609190612f2e565b60405180910390fd5b9392505050565b6040518060c0016040528060008152602001600015158152602001600015158152602001600061ffff16815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826120e4576000855561212b565b82601f106120fd57803560ff191683800117855561212b565b8280016001018555821561212b579182015b8281111561212a57823582559160200191906001019061210f565b5b50905061213891906121ca565b5090565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261217257600085556121b9565b82601f1061218b57803560ff19168380011785556121b9565b828001600101855582156121b9579182015b828111156121b857823582559160200191906001019061219d565b5b5090506121c691906121ca565b5090565b5b808211156121e35760008160009055506001016121cb565b5090565b6000813590506121f681613323565b92915050565b60008135905061220b8161333a565b92915050565b60008135905061222081613351565b92915050565b60008151905061223581613351565b92915050565b60008135905061224a81613368565b92915050565b60008135905061225f8161337f565b92915050565b60008083601f84011261227757600080fd5b8235905067ffffffffffffffff81111561229057600080fd5b6020830191508360018202830111156122a857600080fd5b9250929050565b60008083601f8401126122c157600080fd5b8235905067ffffffffffffffff8111156122da57600080fd5b6020830191508360018202830111156122f257600080fd5b9250929050565b60008135905061230881613396565b92915050565b60008135905061231d816133ad565b92915050565b60006020828403121561233557600080fd5b6000612343848285016121e7565b91505092915050565b60006020828403121561235e57600080fd5b600061236c848285016121fc565b91505092915050565b60008060006060848603121561238a57600080fd5b6000612398868287016121e7565b93505060206123a9868287016121fc565b92505060406123ba8682870161230e565b9150509250925092565b6000806000604084860312156123d957600080fd5b60006123e7868287016121e7565b935050602084013567ffffffffffffffff81111561240457600080fd5b61241086828701612265565b92509250509250925092565b600080600080600080600080600060e08a8c03121561243a57600080fd5b60006124488c828d016121e7565b99505060206124598c828d0161230e565b985050604061246a8c828d01612211565b975050606061247b8c828d01612211565b965050608061248c8c828d016122f9565b95505060a08a013567ffffffffffffffff8111156124a957600080fd5b6124b58c828d016122af565b945094505060c08a013567ffffffffffffffff8111156124d457600080fd5b6124e08c828d01612265565b92509250509295985092959850929598565b60006020828403121561250457600080fd5b600061251284828501612226565b91505092915050565b60006020828403121561252d57600080fd5b600061253b8482850161223b565b91505092915050565b6000806040838503121561255757600080fd5b60006125658582860161223b565b9250506020612576858286016121e7565b9150509250929050565b6000806040838503121561259357600080fd5b60006125a18582860161223b565b92505060206125b28582860161230e565b9150509250929050565b6000602082840312156125ce57600080fd5b60006125dc84828501612250565b91505092915050565b600080604083850312156125f857600080fd5b600061260685828601612250565b9250506020612617858286016121e7565b9150509250929050565b61262a81613232565b82525050565b61263981613256565b82525050565b61264881613256565b82525050565b61265781613262565b82525050565b6126668161326c565b82525050565b600061267883856131f4565b93506126858385846132d0565b61268e83613312565b840190509392505050565b60006126a58385613205565b93506126b28385846132d0565b82840190509392505050565b60006126c9826131cd565b6126d381856131e3565b93506126e38185602086016132df565b6126ec81613312565b840191505092915050565b6000612702826131cd565b61270c81856131f4565b935061271c8185602086016132df565b61272581613312565b840191505092915050565b600061273b826131cd565b6127458185613205565b93506127558185602086016132df565b80840191505092915050565b600061276c826131d8565b6127768185613210565b93506127868185602086016132df565b61278f81613312565b840191505092915050565b60006127a5826131d8565b6127af8185613221565b93506127bf8185602086016132df565b6127c881613312565b840191505092915050565b60006127e0601883613221565b91507f4661696c656420746f207472616e7366657220457468657200000000000000006000830152602082019050919050565b6000612820602283613221565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612886602f83613221565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b60006128ec600f83613221565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b600061292c600e83613221565b91507f496e76616c69642076616c7565730000000000000000000000000000000000006000830152602082019050919050565b600061296c601b83613221565b91507f4661696c656420746f20696e697469616c697a6520726f7574657200000000006000830152602082019050919050565b60006129ac601283613221565b91507f416c7265616479207265676973746572656400000000000000000000000000006000830152602082019050919050565b60006129ec601c83613221565b91507f4661696c656420746f20696e697469616c697a652061646170746572000000006000830152602082019050919050565b6000612a2c601683613221565b91507f526f75746572206e6f742077686974656c6973746564000000000000000000006000830152602082019050919050565b6000612a6c602683613221565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ad2601983613221565b91507f526f75746572206973206e6f742077686974656c6973746564000000000000006000830152602082019050919050565b6000612b12603083613221565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612b78600f83613221565b91507f496e76616c696420706172746e657200000000000000000000000000000000006000830152602082019050919050565b6000612bb8601883613221565b91507f45786368616e6765206e6f742077686974656c697374656400000000000000006000830152602082019050919050565b6000612bf8600083613205565b9150600082019050919050565b6000612c12601d83613221565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000612c52602a83613221565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000612cb8601783613221565b91507f63616c6c6572206973206e6f74207468652061646d696e0000000000000000006000830152602082019050919050565b6000612cf8602f83613221565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600060c083016000830151612d696000860182612df0565b506020830151612d7c6020860182612630565b506040830151612d8f6040860182612630565b506060830151612da26060860182612de1565b5060808301518482036080860152612dba8282612761565b91505060a083015184820360a0860152612dd482826126be565b9150508091505092915050565b612dea81613298565b82525050565b612df9816132c6565b82525050565b612e08816132c6565b82525050565b6000612e1b828486612699565b91508190509392505050565b6000612e338284612730565b915081905092915050565b6000612e4982612beb565b9150819050919050565b6000602082019050612e686000830184612621565b92915050565b6000604082019050612e836000830185612621565b612e906020830184612dff565b9392505050565b6000602082019050612eac600083018461263f565b92915050565b6000602082019050612ec7600083018461264e565b92915050565b6000602082019050612ee2600083018461265d565b92915050565b60006020820190508181036000830152612f0381848661266c565b90509392505050565b60006020820190508181036000830152612f2681846126f7565b905092915050565b60006020820190508181036000830152612f48818461279a565b905092915050565b60006020820190508181036000830152612f69816127d3565b9050919050565b60006020820190508181036000830152612f8981612813565b9050919050565b60006020820190508181036000830152612fa981612879565b9050919050565b60006020820190508181036000830152612fc9816128df565b9050919050565b60006020820190508181036000830152612fe98161291f565b9050919050565b600060208201905081810360008301526130098161295f565b9050919050565b600060208201905081810360008301526130298161299f565b9050919050565b60006020820190508181036000830152613049816129df565b9050919050565b6000602082019050818103600083015261306981612a1f565b9050919050565b6000602082019050818103600083015261308981612a5f565b9050919050565b600060208201905081810360008301526130a981612ac5565b9050919050565b600060208201905081810360008301526130c981612b05565b9050919050565b600060208201905081810360008301526130e981612b6b565b9050919050565b6000602082019050818103600083015261310981612bab565b9050919050565b6000602082019050818103600083015261312981612c05565b9050919050565b6000602082019050818103600083015261314981612c45565b9050919050565b6000602082019050818103600083015261316981612cab565b9050919050565b6000602082019050818103600083015261318981612ceb565b9050919050565b600060208201905081810360008301526131aa8184612d51565b905092915050565b60006020820190506131c76000830184612dff565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061323d826132a6565b9050919050565b600061324f826132a6565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156132fd5780820151818401526020810190506132e2565b8381111561330c576000848401525b50505050565b6000601f19601f8301169050919050565b61332c81613232565b811461333757600080fd5b50565b61334381613244565b811461334e57600080fd5b50565b61335a81613256565b811461336557600080fd5b50565b61337181613262565b811461337c57600080fd5b50565b6133888161326c565b811461339357600080fd5b50565b61339f81613298565b81146133aa57600080fd5b50565b6133b6816132c6565b81146133c157600080fd5b5056fea264697066735822122000c2b0997fdf8f4a907cee806b0af0e8c18d0bcb16ad420c1eefcf5c4bdcf20d64736f6c63430007050033",
			//},
			//transferProxy: {
			//	Nonce: "0x11",
			//	Code:  "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806315dacbea14610051578063715018a61461006d5780638da5cb5b14610077578063f2fde38b14610095575b600080fd5b61006b60048036038101906100669190610b59565b6100b1565b005b61007561049f565b005b61007f6105f2565b60405161008c9190610e9f565b60405180910390f35b6100af60048036038101906100aa9190610b30565b61061b565b005b6100b96107dd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013d90610f9c565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061019b575061019a8373ffffffffffffffffffffffffffffffffffffffff166107e5565b5b6101da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d190610f7c565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016102159190610e9f565b60206040518083038186803b15801561022d57600080fd5b505afa158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190610be5565b90507fc1209790a4467a38d547e89c25c60977b25e17eacd7a0234750ba270c059fc4884848360405161029a93929190610ee3565b60405180910390a18473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85856040518363ffffffff1660e01b81526004016102dd929190610eba565b60206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610be5565b90507fc1209790a4467a38d547e89c25c60977b25e17eacd7a0234750ba270c059fc4884848360405161036293929190610ee3565b60405180910390a17fc1209790a4467a38d547e89c25c60977b25e17eacd7a0234750ba270c059fc4885848460405161039d93929190610ee3565b60405180910390a16103d28484848873ffffffffffffffffffffffffffffffffffffffff166107f8909392919063ffffffff16565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161040b9190610e9f565b60206040518083038186803b15801561042357600080fd5b505afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190610be5565b90507fc1209790a4467a38d547e89c25c60977b25e17eacd7a0234750ba270c059fc4884848360405161049093929190610ee3565b60405180910390a15050505050565b6104a76107dd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b90610f9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106236107dd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790610f9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790610f3c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080823b905060008111915050919050565b61087b846323b872dd60e01b85858560405160240161081993929190610ee3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610881565b50505050565b60606108e3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166109489092919063ffffffff16565b905060008151111561094357808060200190518101906109039190610bbc565b610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093990610fdc565b60405180910390fd5b5b505050565b60606109578484600085610960565b90509392505050565b6060824710156109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c90610f5c565b60405180910390fd5b6109ae856107e5565b6109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610fbc565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff168587604051610a179190610e88565b60006040518083038185875af1925050503d8060008114610a54576040519150601f19603f3d011682016040523d82523d6000602084013e610a59565b606091505b5091509150610a69828286610a75565b92505050949350505050565b60608315610a8557829050610ad5565b600083511115610a985782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc9190610f1a565b60405180910390fd5b9392505050565b600081359050610aeb816110ba565b92915050565b600081519050610b00816110d1565b92915050565b600081359050610b15816110e8565b92915050565b600081519050610b2a816110e8565b92915050565b600060208284031215610b4257600080fd5b6000610b5084828501610adc565b91505092915050565b60008060008060808587031215610b6f57600080fd5b6000610b7d87828801610adc565b9450506020610b8e87828801610adc565b9350506040610b9f87828801610adc565b9250506060610bb087828801610b06565b91505092959194509250565b600060208284031215610bce57600080fd5b6000610bdc84828501610af1565b91505092915050565b600060208284031215610bf757600080fd5b6000610c0584828501610b1b565b91505092915050565b610c178161102e565b82525050565b6000610c2882610ffc565b610c328185611012565b9350610c42818560208601611076565b80840191505092915050565b6000610c5982611007565b610c63818561101d565b9350610c73818560208601611076565b610c7c816110a9565b840191505092915050565b6000610c9460268361101d565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cfa60268361101d565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d6060148361101d565b91507f496e76616c69642066726f6d20616464726573730000000000000000000000006000830152602082019050919050565b6000610da060208361101d565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610de0601d8361101d565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000610e20602a8361101d565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b610e828161106c565b82525050565b6000610e948284610c1d565b915081905092915050565b6000602082019050610eb46000830184610c0e565b92915050565b6000604082019050610ecf6000830185610c0e565b610edc6020830184610c0e565b9392505050565b6000606082019050610ef86000830186610c0e565b610f056020830185610c0e565b610f126040830184610e79565b949350505050565b60006020820190508181036000830152610f348184610c4e565b905092915050565b60006020820190508181036000830152610f5581610c87565b9050919050565b60006020820190508181036000830152610f7581610ced565b9050919050565b60006020820190508181036000830152610f9581610d53565b9050919050565b60006020820190508181036000830152610fb581610d93565b9050919050565b60006020820190508181036000830152610fd581610dd3565b9050919050565b60006020820190508181036000830152610ff581610e13565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006110398261104c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611094578082015181840152602081019050611079565b838111156110a3576000848401525b50505050565b6000601f19601f8301169050919050565b6110c38161102e565b81146110ce57600080fd5b50565b6110da81611040565b81146110e557600080fd5b50565b6110f18161106c565b81146110fc57600080fd5b5056fea2646970667358221220c83be186a0780ec08cec33791be814697fc079f6ac34bfd65b1776832dc1293764736f6c63430007050033",
			//},
			daiContract: OverrideAccount{
				//Code: "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb146106b4578063b753a98c1461071a578063bb35783b14610768578063bf353dbb146107d6578063dd62ed3e1461082e578063f2d5d56b146108a657610142565b80637ecebe00146104a15780638fcbaf0c146104f957806395d89b411461059f5780639c52a7f1146106225780639dc29fac1461066657610142565b8063313ce5671161010a578063313ce567146102f25780633644e5151461031657806340c10f191461033457806354fd4d501461038257806365fae35e1461040557806370a082311461044957610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806323b872dd1461024e57806330adf81f146102d4575b600080fd5b61014f6108f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092d565b604051808215151515815260200191505060405180910390f35b610238610a1f565b6040518082815260200191505060405180910390f35b6102ba6004803603606081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a25565b604051808215151515815260200191505060405180910390f35b6102dc610f3a565b6040518082815260200191505060405180910390f35b6102fa610f61565b604051808260ff1660ff16815260200191505060405180910390f35b61031e610f66565b6040518082815260200191505060405180910390f35b6103806004803603604081101561034a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6c565b005b61038a611128565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ca5780820151818401526020810190506103af565b50505050905090810190601f1680156103f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104476004803603602081101561041b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611161565b005b61048b6004803603602081101561045f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128f565b6040518082815260200191505060405180910390f35b6104e3600480360360208110156104b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a7565b6040518082815260200191505060405180910390f35b61059d600480360361010081101561051057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803515159060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506112bf565b005b6105a76117fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e75780820151818401526020810190506105cc565b50505050905090810190601f1680156106145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106646004803603602081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611833565b005b6106b26004803603604081101561067c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611961565b005b610700600480360360408110156106ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611df4565b604051808215151515815260200191505060405180910390f35b6107666004803603604081101561073057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e6e565b005b6107d46004803603606081101561077e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e7e565b005b610818600480360360208110156107ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e8f565b6040518082815260200191505060405180910390f35b6108906004803603604081101561084457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea7565b6040518082815260200191505060405180910390f35b6108f2600480360360408110156108bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ecc565b005b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60015481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4461692f696e73756666696369656e742d62616c616e6365000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610bb457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610db25781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4461692f696e73756666696369656e742d616c6c6f77616e636500000000000081525060200191505060405180910390fd5b610d31600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611edc565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610dfb600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611edc565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e87600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611ef6565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b611069600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611ef6565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110b860015482611ef6565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b60006005547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141561148c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4461692f696e76616c69642d616464726573732d30000000000000000000000081525060200191505060405180910390fd5b60018185858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156114e9573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611593576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f696e76616c69642d7065726d6974000000000000000000000000000081525060200191505060405180910390fd5b60008614806115a25750854211155b611614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f7065726d69742d65787069726564000000000000000000000000000081525060200191505060405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505587146116d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4461692f696e76616c69642d6e6f6e636500000000000000000000000000000081525060200191505060405180910390fd5b6000856116e4576000611706565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a350505050505050505050565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146118e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4461692f696e73756666696369656e742d62616c616e6365000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611aee57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611cec5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611be5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4461692f696e73756666696369656e742d616c6c6f77616e636500000000000081525060200191505060405180910390fd5b611c6b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611edc565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d35600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611edc565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d8460015482611edc565b600181905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3611e66338484610a25565b905092915050565b611e79338383610a25565b505050565b611e89838383610a25565b50505050565b60006020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b611ed7823383610a25565b505050565b6000828284039150811115611ef057600080fd5b92915050565b6000828284019150811015611f0a57600080fd5b9291505056fea265627a7a7231582098db72fcff950e8a514d6ef54f67a47970346311b147586d5f58508c94c2e0eb64736f6c634300050c0032",
				StateDiff: map[string]string{
					indexDaiBalanceOf.String():              fakeBalance,
					indexDaiAllowance.String():              fakeAllowance,
					indexDaiTransferProxyAllowance.String(): fakeAllowance,
				},
			},
			//kncContract: OverrideAccount{
			//	StateDiff: map[string]string{
			//		indexKNCBalanceOf.String(): fakeBalance,
			//		indexKNCAllowance.String(): fakeAllowance,
			//	},
			//},
		},
	}

	structLogs := make([]StructLog, 0, 0)
	response := &DebugTraceCallResponse{}

	if err := rc.Client.Call(response, "debug_traceCall", object, "latest", config); err != nil {
		panic(err)
	}
	fmt.Println("response status", response.Failed)
	if response.Failed {
		returnValueString, err := hex.DecodeString(response.ReturnValue)
		if err != nil {
			panic(err)
		}
		fmt.Println("returnValueString", string(returnValueString))

		fmt.Println("get log of failed code")
		//panic("Call Failed")
	}
	fmt.Println(response.ReturnValue)
	fmt.Println(response.Gas)
	for _, structLog := range response.StructLogs {
		if strings.HasPrefix(structLog.Op, "LOG") {
			structLogs = append(structLogs, structLog)
			//fmt.Println("Pc:", structLog.Pc)
			//fmt.Println("Op:", structLog.Op)
			//fmt.Println("Gas:", structLog.Gas)
			//fmt.Println("Memory:", structLog.Memory)
			//fmt.Println("Stack:", structLog.Stack)
			//fmt.Println("-------------------")
		}
	}
	return structLogs
}

func (rc *RpcClient) GetEtherKyberSwapLosgs(structLogs []StructLog) {
	fmt.Println("GetEtherKyberSwapLosgs---")
	// Event
	type Swapped struct {
		Sender       common.Address
		SrcToken     common.Address
		DstToken     common.Address
		DstReceiver  common.Address
		SpentAmount  *big.Int
		ReturnAmount *big.Int
	}

	type Exchange struct {
		Pair      common.Address
		AmountOut *big.Int
		Output    common.Address
	}

	type ErrorEvent struct {
		Reason string
	}

	type Approval struct {
		Owner   common.Address
		Spender common.Address
		Value   *big.Int
	}

	type Transfer struct {
		From  common.Address
		To    common.Address
		Value *big.Int
	}

	// Approval
	logApprovalSig := []byte("Approval(address,address,uint256)")
	logApprovalSigHash := crypto.Keccak256Hash(logApprovalSig)
	logApprovalEvent := common.HexToHash(logApprovalSigHash.String())
	//fmt.Println("---logApprovalEvent: ", logApprovalEvent.Hex())

	// Transfer
	logTransferSig := []byte("Transfer(address,address,uint256)")
	logTransferSigHash := crypto.Keccak256Hash(logTransferSig)
	logTransferEvent := common.HexToHash(logTransferSigHash.String())
	//fmt.Println("---logTransferEvent: ", logTransferEvent.Hex())

	// Exchange
	logExchangeSig := []byte("Exchange(address,uint256,address)")
	logExchangeSigHash := crypto.Keccak256Hash(logExchangeSig)
	logExchangeEvent := common.HexToHash(logExchangeSigHash.String())
	//fmt.Println("---logExchangeEvent: ", logExchangeEvent.Hex())

	// Swapped
	logSwappedSig := []byte("Swapped(address,address,address,address,uint256,uint256)")
	logSwappedSigHash := crypto.Keccak256Hash(logSwappedSig)
	logSwappedEvent := common.HexToHash(logSwappedSigHash.String())
	//fmt.Println("---logSwappedEvent: ", logSwappedEvent.Hex())

	// Error
	logErrorSig := []byte("Error(string)")
	logErrorSigHash := crypto.Keccak256Hash(logErrorSig)
	logErrorEvent := common.HexToHash(logErrorSigHash.String())
	//fmt.Println("---logErrorEvent: ", logErrorEvent.Hex())

	// contractABI
	contractAbi, err := abi.JSON(strings.NewReader(aggregation_router.ContractMetaData.ABI))
	if err != nil {
		panic(err)
	}

	for _, log := range structLogs {
		fmt.Println("-----------------------------------------------------------------------------------------------------------------------------")
		fmt.Println("Opcode: ", log.Op)
		topics, memoryHexString := rc.GetTopicAndData(log)
		vLogData, err := hex.DecodeString(memoryHexString)
		if err != nil {
			panic(err)
		}
		switch topics[0] {
		case logSwappedEvent.Hex():
			var event Swapped
			err = contractAbi.UnpackIntoInterface(&event, "Swapped", vLogData)
			if err != nil {
				fmt.Println("ERR logSwappedEvent", err)
				continue
				//panic(err)
			}
			fmt.Println(
				"DecodeEvent",
				"sender", event.Sender,
				"srcToken", event.SrcToken,
				"dstToken", event.DstToken,
				"dstReceive", event.DstReceiver,
				"spentAmount", event.SpentAmount,
				"returnAmount", event.ReturnAmount,
			)
		case logExchangeEvent.Hex():
			var event Exchange
			err = contractAbi.UnpackIntoInterface(&event, "Exchange", vLogData)
			if err != nil {
				fmt.Println("ERR logExchangeEvent", err)
				continue
				//panic(err)
			}
			fmt.Println(
				"DecodeEvent",
				"Pair", event.Pair,
				"AmountOut", event.AmountOut,
				"Output", event.Output,
			)
		case logErrorEvent.Hex():
			var event ErrorEvent
			err = contractAbi.UnpackIntoInterface(&event, "Error", vLogData)
			if err != nil {
				fmt.Println("ERR ErrorEvent", err)
			}
			fmt.Println("Decode Error Event",
				"Reason", event.Reason,
			)
			continue
		case logApprovalEvent.Hex():
			fmt.Println("This is pproval event")
			continue
			//var event Approval
			//err = contractAbi.UnpackIntoInterface(&event, "Approval", vLogData)
			//if err != nil {
			//	fmt.Println("ERR logApprovalEvent", err)
			//	continue
			//	//panic(err)
			//}
			//fmt.Println(
			//	"DecodeEvent",
			//	"Owner", event.Owner,
			//	"Spender", event.Spender,
			//	"Value", event.Value,
			//)
		case logTransferEvent.Hex():
			fmt.Println("This is Transfer event")
			continue
			//var event Transfer
			//err = contractAbi.UnpackIntoInterface(&event, "Transfer", vLogData)
			//if err != nil {
			//	fmt.Println("ERR logApprovalEvent", err)
			//	continue
			//	//panic(err)
			//}
			//fmt.Println(
			//	"DecodeEvent",
			//	"From", event.From,
			//	"Spender", event.To,
			//	"Value", event.Value,
			//)
		default:
			fmt.Println("Not match any event")
		}
	}
}

func (rc *RpcClient) GetEtherParaswapLosgs(structLogs []StructLog) {
	fmt.Println("GetEtherParaSwapLosgs---")
	// Event
	type MyDebug struct {
		Sender      common.Address
		DstReceiver common.Address
		Amount      *big.Int
	}
	type MyUtilDebug struct {
		Src    common.Address
		Dst    common.Address
		Amount *big.Int
	}
	type Approval struct {
		Src common.Address
		Dst common.Address
		Wad *big.Int
	}

	// MyDebug
	logMyDebugSig := []byte("MyDebug(address,address,uint256)")
	logMyDebugSigHash := crypto.Keccak256Hash(logMyDebugSig)
	logMyDebugEvent := common.HexToHash(logMyDebugSigHash.String())

	// MyTransferDebug
	logMyTransferDebugSig := []byte("MyTransferDebug(address,address,uint256)")
	logMyTransferDebugSigHash := crypto.Keccak256Hash(logMyTransferDebugSig)
	logMyTransferDebugEvent := common.HexToHash(logMyTransferDebugSigHash.String())

	// MyUtilDebug
	logMyUtilDebugSig := []byte("MyUtilDebug(address,address,uint256)")
	logMyUtilDebugSigHash := crypto.Keccak256Hash(logMyUtilDebugSig)
	logMyUtilDebugEvent := common.HexToHash(logMyUtilDebugSigHash.String())

	// Approval
	logApprovalSig := []byte("Approval(address,address,uint256)")
	logApprovalSigHash := crypto.Keccak256Hash(logApprovalSig)
	logApprovalEvent := common.HexToHash(logApprovalSigHash.String())

	// contractABI
	contractAbi, err := abi.JSON(strings.NewReader(paraswap.ParaswapRouterMetaData.ABI))
	if err != nil {
		panic(err)
	}
	contractTransferProxyAbi, err := abi.JSON(strings.NewReader(paraswaptransfer.ParaswapTransferProxyMetaData.ABI))
	if err != nil {
		panic(err)
	}
	contractUtilAbit, err := abi.JSON(strings.NewReader(paraswaputil.ParaswapUtilsMetaData.ABI))
	if err != nil {
		panic(err)
	}
	contractDaiAbi, err := abi.JSON(strings.NewReader(dai.ContractMetaData.ABI))
	if err != nil {
		panic(err)
	}

	for _, log := range structLogs {
		fmt.Println("-----------------------------------------------------------------------------------------------------------------------------")
		fmt.Println("Opcode: ", log.Op)
		topics, memoryHexString := rc.GetTopicAndData(log)
		vLogData, err := hex.DecodeString(memoryHexString)
		if err != nil {
			panic(err)
		}
		switch topics[0] {
		case logMyDebugEvent.Hex():
			var event MyDebug
			err = contractAbi.UnpackIntoInterface(&event, "MyDebug", vLogData)
			if err != nil {
				fmt.Println("ERR MyDebug", err)
				continue
			}
			fmt.Println(
				"DecodeEvent MyDebug",
				"sender", event.Sender,
				"dstReceive", event.DstReceiver,
				"amount", event.Amount,
			)
		case logMyUtilDebugEvent.Hex():
			var event MyUtilDebug
			err = contractUtilAbit.UnpackIntoInterface(&event, "MyUtilDebug", vLogData)
			if err != nil {
				fmt.Println("ERR MyUtilDebug", err)
				continue
			}
			fmt.Println(
				"DecodeEvent MyUtilDebug",
				"Src", event.Src,
				"Dst", event.Dst,
				"amount", event.Amount,
			)
		case logMyTransferDebugEvent.Hex():
			var event MyDebug
			err = contractTransferProxyAbi.UnpackIntoInterface(&event, "MyTransferDebug", vLogData)
			if err != nil {
				fmt.Println("ERR MyTransferDebug", err)
				continue
			}
			fmt.Println(
				"DecodeEvent MyTransferDebug",
				"sender", event.Sender,
				"dstReceive", event.DstReceiver,
				"amount", event.Amount,
			)
		case logApprovalEvent.Hex():
			var event Approval
			err = contractDaiAbi.UnpackIntoInterface(&event, "Approval", vLogData)
			if err != nil {
				fmt.Println("ERR Approval", err)
				continue
			}
			fmt.Println(
				"DecodeEvent Approval",
				"src", topics[1],
				"dst", topics[2],
				"wad", event.Wad,
			)
		default:
			fmt.Println("Not match any event")
		}
	}
}

func (rc *RpcClient) GetTopicAndData(log StructLog) ([]string, string) {
	offset := hex2int(log.Stack[len(log.Stack)-1])
	length := hex2int(log.Stack[len(log.Stack)-2])

	hexMemory := strings.Join(log.Memory[:], "")
	byteMemory, err := hex.DecodeString(hexMemory)
	if err != nil {
		panic(err)
	}
	byteData := byteMemory[offset : offset+length]
	memory := hex.EncodeToString(byteData)

	topicCount, err := strconv.Atoi(string(log.Op[len(log.Op)-1]))
	if err != nil {
		panic(err)
	}

	//fmt.Println("TOPIC COUNT", topicCount)
	topics := make([]string, 0, topicCount+1)
	for i := len(log.Stack) - 3; i > len(log.Stack)-3-topicCount; i-- {
		topics = append(topics, log.Stack[i])
	}

	fmt.Println("TOPIC", topics)
	fmt.Println("MEMORY", memory)
	return topics, memory
}

func big2hex(b *big.Int) string {
	return fmt.Sprintf("%x", b)
}

func hex2int(hexStr string) uint64 {
	// remove 0x suffix if found in the input string
	cleaned := strings.Replace(hexStr, "0x", "", -1)

	// base 16 for hexadecimal
	result, _ := strconv.ParseUint(cleaned, 16, 64)
	return uint64(result)
}

func toHashString(hexStr string) string {
	str := strings.Replace(hexStr, "0x", "", -1)
	str = strings.ToLower(str)
	return fmt.Sprintf("%064v", str)
}

func (rc *RpcClient) GetBalanceOf(contractAddress string, index common.Hash) {
	state, err := rc.EthClient.StorageAt(
		context.Background(),
		common.HexToAddress(contractAddress),
		index, nil)
	if err != nil {
		panic(err)
	}

	contractAbi, err := abi.JSON(strings.NewReader(dai.ContractMetaData.ABI))
	if err != nil {
		panic(err)
	}
	balanceOf, err := contractAbi.Unpack("balanceOf", state)
	if err != nil {
		panic(err)
	}
	fmt.Println("Storage At: balanceOf", balanceOf)

	//realByteState, err := hex.DecodeString("000000000000000000000000000000000000000000000000DC11DF3655EF0D3E")
	//if err != nil {
	//	panic(err)
	//}
	realByteState := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 53, 201, 173, 197, 222, 160, 0, 0}
	checkBalanceOf, err := contractAbi.Unpack("balanceOf", realByteState)
	if err != nil {
		panic(err)
	}
	fmt.Println("Storage At: CheckBalanceOf", checkBalanceOf)

}

func (rc *RpcClient) GetIndexBalanceOf(owner string, slot string) common.Hash {
	slot = toHashString(slot)
	owner = toHashString(owner)

	index := solsha3.SoliditySHA3(
		// types
		[]string{"address", "uint256"},

		// values
		[]interface{}{
			owner,
			slot,
		},
	)
	return common.BytesToHash(index)
}

func (rc *RpcClient) GetIndexAllowance(owner string, spender string, slot string) common.Hash {
	slot = toHashString(slot)
	owner = toHashString(owner)
	temp := solsha3.SoliditySHA3(
		// types
		[]string{"address", "uint256"},

		// values
		[]interface{}{
			owner,
			slot,
		},
	)
	tempStr := toHashString(common.BytesToHash(temp).String())
	spender = toHashString(spender)
	index := solsha3.SoliditySHA3(
		// types
		[]string{"address", "address"},

		// values
		[]interface{}{
			spender,
			tempStr,
		},
	)
	return common.BytesToHash(index)
}
